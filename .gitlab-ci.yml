services:
    - postgres

variables:
    DATABASE_HOST: postgres
    DATABASE_USER: postgres
    DATABASE_PASSWORD: ""

stages:
  - Static Analysis
  - Unit Tests
  - deploy
  - test

before_script:
  - apt-get update -yqqq
  - apt-get install -y python3.7-dev python3-pip
  - pip3 install -r requirements.txt

flake8:
  stage: Static Analysis
  script:
  - flake8

UnitTests:
  stage: Unit Tests
  script:
  - python3 -m coverage run manage.py test
  - python3 -m coverage report
  - COVERAGE=$(python3 -m coverage report | tail -n 1 | grep -o "[0-9][0-9]%" | cut -b1,2)
  - if [ $COVERAGE -lt 60 ]; then exit 1; fi

staging:
  stage: deploy
  script:
  - apt-get update -qy
  - apt-get install -y ruby-dev
  - gem install dpl
  - dpl --provider=heroku --app=andorra-ts --api-key=$HEROKU_STAGING_API_KEY
  only:
  - master

test:
  stage: test
  script:
  - apt-get update -qy
  - set -xe
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
  - apt-get update -yqqq
  - apt-get install -y google-chrome-stable
  - webdrivermanager chrome --linkpath AUTO
  - python3 -V
  - chromedriver --version
  - google-chrome-stable --version
  - robot --variable LOGINURL:http://andorra-ts.herokuapp.com/ --variable BROWSER:headlesschrome tests

  only:
  - master

production:
  stage: deploy
  script:
  - apt-get update -qy
  - apt-get install -y ruby-dev
  - gem install dpl
  - dpl --provider=heroku --app=andorra-prod --api-key=$HEROKU_PRODUCTION_API_KEY
  only:
  - tags
